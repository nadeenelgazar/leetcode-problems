/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root == null)
            return true;
            
       int rightHeight = treeHeight(root.right);
       int leftHeight = treeHeight(root.left);
       boolean ans = false;

       if((Math.abs(rightHeight - leftHeight ) == 0 || Math.abs(rightHeight - leftHeight ) ==1) && isBalanced(root.left) && isBalanced(root.right))
          ans = true;

       return ans ;
    }
    
  /* function to calculate height of the tree */
    public int treeHeight(TreeNode root){
        if(root == null)
            return 0;

        return Math.max(treeHeight(root.left) + 1 ,treeHeight(root.right) + 1 );
    }
}
