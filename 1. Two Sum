class Solution {
    public int[] twoSum(int[] nums, int target) {
    /*HashMap used to calculate frequency of each element */
        HashMap<Integer,Integer> map = new HashMap<>();

        for(int i = 0 ; i < nums.length ; i++){
            int freq = map.getOrDefault(nums[i] , 0 ) + 1 ;
            map.put(nums[i] , freq);
        }

        /* getting the 2 numbers that we are looking for */
        int num1 = 0, num2 =0;
        for (Map.Entry<Integer, Integer> e : map.entrySet()){
            int num = e.getKey();
            int freq = e.getValue();
            int lookingFor = target - num;
            
            if(num == lookingFor && freq >= 2)
            {
                num1 = num;
                num2 = num;
                break;
            }
            if(map.containsKey(lookingFor)){
                num1 = num;
                num2 = lookingFor;
                
                break;
            }
        }
        /* finding thier indicies */
        int[] ans = new int[2];
        boolean flag = true;
        for(int i = 0 ; i < nums.length ; i++){
            if(nums[i] == num1 && flag){
                ans[0] = i;
                flag = false;

            }
           else if(nums[i] == num2){
                ans[1] = i;
                
            }
        }
        return ans;
    }
}
